// ==UserScript==
// @name        Hide Movies by Title on Letterboxd with X Button
// @namespace   http://tampermonkey.net/
// @version     3.3
// @description Add an X button to movies on Letterboxd; view/edit hidden titles with button; persistent hidden titles; custom backup list. Optimized for performance.
// @author      Your Name
// @match       https://letterboxd.com/*
// @grant       GM_setValue
// @grant       GM_getValue
// ==/UserScript==

(function() {
    'use strict';

    // *** CUSTOM BACKUP LIST (EDIT THIS ARRAY DIRECTLY) ***
    const customHiddenTitlesBackup = [
'Schindler\'s List','you\'re cordially invited','The Shawshank Redemption','The Godfather','The Dark Knight','12 Angry Men','Schindler\\s List','anora','conclave','babygirl','a real pain','a complete unknown','emilia pérez','we live in time','wicked','blink twice','flow','queer','the wild robot','parasite','you\\re cordially invited','the menu','how to lose a guy in 10 days','the order','eternal sunshine of the spotless mind','vidaamuyarchi','sing sing','the girl with the needle','la la land','whiplash','wallace & gromit: vengeance most fowl','(500) days of summer','a different man','10 things i hate about you','dog man','the apprentice','sonic the hedgehog 3','the notebook','shrek','juror #2','memoir of a snail','paddington in peru','nickel boys','fight club','past lives','twilight','shrek 2','pearl','bridget jones\'s diary','back in action','moana 2','beautiful boy','little miss sunshine','i saw the tv glow','the devil wears prada','barbie','spider-man: no way home','civil war','notting hill','the truman show','black swan','grave of the fireflies','twin peaks: fire walk with me','before sunrise','maxxxine','mufasa: the lion king','inside out 2','spirited away','little women','fantastic mr. fox','in the mood for love','crazy, stupid, love.','pride & prejudice','spider-man: into the spider-verse','saltburn','howl\'s moving castle','oppenheimer','the social network','django unchained','the lord of the rings: the fellowship of the ring','to all the boys i\'ve loved before','the virgin suicides','shiva baby','gone girl','spider-man: across the spider-verse','the wolf of wall street','carry-on','mamma mia!'
        // ... Add your other titles here
    ];

    let hiddenTitles = [];

    const storedTitles = GM_getValue('hiddenTitles', []);
    customHiddenTitlesBackup.forEach(title => { if (!storedTitles.includes(title)) hiddenTitles.push(title); });
    hiddenTitles = hiddenTitles.concat(storedTitles);
    hiddenTitles = [...new Set(hiddenTitles)];

    function saveHiddenTitles() { GM_setValue('hiddenTitles', hiddenTitles); }

    function addXButton(item) {
        if (item.querySelector('.x-button')) return;

        const xButton = document.createElement('span');
        xButton.classList.add('x-button');
        xButton.innerHTML = '×';
        xButton.style.cssText = `
            position: absolute;
            top: 5px;
            right: 5px;
            cursor: pointer;
            color: red;
            font-size: 20px;
            z-index: 1000;
            background-color: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            text-align: center;
            line-height: 20px;
            pointer-events: auto;
        `;

        xButton.addEventListener('click', (event) => {
            event.stopPropagation();
            const movieTitle = item.querySelector('.react-component.poster')?.getAttribute('data-film-name')?.toLowerCase();
            if (movieTitle && !hiddenTitles.includes(movieTitle)) {
                hiddenTitles.push(movieTitle);
                saveHiddenTitles();
                item.style.display = 'none';
                console.log(`Added "${movieTitle}" to the hide list:`, hiddenTitles);
            }
        });

        item.style.position = 'relative';
        item.appendChild(xButton);
    }

    function hideMovies() {
        const movieItems = document.querySelectorAll('li.listitem.poster-container, li.poster-container');
        movieItems.forEach(item => {
            const movieTitle = item.querySelector('.react-component.poster')?.getAttribute('data-film-name')?.toLowerCase();
            if (movieTitle) {
                item.style.display = hiddenTitles.includes(movieTitle) ? 'none' : '';
                if (!hiddenTitles.includes(movieTitle) && !item.querySelector('.x-button')) {
                    addXButton(item);
                }
            }
        });
    }

    let debounceTimeout;
    function debouncedHideMovies() {
        clearTimeout(debounceTimeout);
        debounceTimeout = setTimeout(() => {
            if (document.readyState === 'complete') {
                hideMovies();
            }
        }, 100);
    }

    debouncedHideMovies();

    const observer = new MutationObserver(debouncedHideMovies);
    observer.observe(document.body, { childList: true, subtree: true });

    function createViewButton() {
        const viewButton = document.createElement('button');
        viewButton.textContent = 'View/Edit & Save Hidden Titles';
        viewButton.style.cssText = `
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 9999;
            padding: 8px 16px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        `;

        let textArea = null;

        viewButton.addEventListener('click', () => {
            if (textArea) {
                const newTitlesString = textArea.value;
                let newHiddenTitles = [];

                try {
                    newHiddenTitles = JSON.parse('[' + newTitlesString + ']');
                } catch (jsonError) {
                    try {
                        newHiddenTitles = newTitlesString.split(',').map(item => item.trim().replace(/'/g, ''));
                    } catch (splitError){
                        alert("Invalid format. Please use format like 'title1','title2' or [ 'title1', 'title2']");
                        return;
                    }

                }

                hiddenTitles = newHiddenTitles;
                saveHiddenTitles();
                alert("Hidden Titles saved!");
                hideMovies();

                document.body.removeChild(textArea);
                textArea = null;
                viewButton.textContent = 'View/Edit & Save Hidden Titles';
                return;
            }

            const formattedTitles = hiddenTitles.map(title => `'${title.replace(/\\/g, '\\\\').replace(/'/g, "\\'")}'`).join(',');

            textArea = document.createElement('textarea');
            textArea.value = formattedTitles;
            textArea.style.cssText = `
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: 10000;
                width: 80%;
                height: 50%;
                padding: 10px;
                border: 1px solid #ccc;
                font-family: monospace;
                resize: none;
            `;
            document.body.appendChild(textArea);
            textArea.select();
            viewButton.textContent = 'Save & Close';

        });

        document.body.appendChild(viewButton);
    }

    createViewButton();

})();
